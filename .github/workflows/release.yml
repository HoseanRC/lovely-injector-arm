name: Release

on:
  push:
    tags:
      - "v[0-9]+.*"

jobs:
  prepare:
    name: Create draft release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

        # Yes, this is the lazy way of doing it. Am I lazy? Yes.
      - name: Create draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat <<-'EOF' > NOTE.md
          ## [Install guide](https://github.com/ethangreen-dev/lovely-injector?tab=readme-ov-file#manual-installation)
          OS|Download|
          --|--|
          Raspberry Pi (ARMv6)|[lovely-arm-unknown-linux-gnueabihf.tar.gz](https://github.com/ethangreen-dev/lovely-injector/releases/download/${{ github.ref_name }}/lovely-arm-unknown-linux-gnueabihf.tar.gz)|
          Raspberry Pi (ARMv7)|[lovely-armv7-unknown-linux-gnueabihf.tar.gz](https://github.com/ethangreen-dev/lovely-injector/releases/download/${{ github.ref_name }}/lovely-armv7-unknown-linux-gnueabihf.tar.gz)|
          Raspberry Pi (ARMv8)|[lovely-aarch64-unknown-linux-gnu.tar.gz](https://github.com/ethangreen-dev/lovely-injector/releases/download/${{ github.ref_name }}/lovely-aarch64-unknown-linux-gnu.tar.gz)|
          Android (ARMv7)|[lovely-armv7-linux-androideabi.tar.gz](https://github.com/ethangreen-dev/lovely-injector/releases/download/${{ github.ref_name }}/lovely-armv7-linux-androideabi.tar.gz)|
          Android (ARMv8)|[lovely-aarch64-linux-android.tar.gz](https://github.com/ethangreen-dev/lovely-injector/releases/download/${{ github.ref_name }}/lovely-aarch64-linux-android.tar.gz)|
          EOF

          gh release create ${{ github.ref_name }} \
          --title "${{ github.ref_name }}" \
          --draft  \
          --generate-notes \
          --notes-file NOTE.md \

  build-rpi:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arm-unknown-linux-gnueabihf      # ARMv6 (Raspberry Pi 1, Zero)
          - armv7-unknown-linux-gnueabihf    # ARMv7 (Raspberry Pi 2, 3)
          - aarch64-unknown-linux-gnu        # ARMv8 (Raspberry Pi 3+, 4, 5)

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

      - name: Configure cross-compilation
        run: |
          mkdir -p ~/.cargo
          cat >> ~/.cargo/config.toml << EOF
          [target.arm-unknown-linux-gnueabihf]
          linker = "arm-linux-gnueabihf-gcc"
          
          [target.armv7-unknown-linux-gnueabihf]
          linker = "arm-linux-gnueabihf-gcc"
          
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Build
        run: cargo build --target ${{ matrix.target }} --package lovely-unix --release

      - name: Compress tar.gz
        run: |
          cp ./crates/lovely-unix/run_lovely_linux.sh ./target/${{ matrix.target }}/release/
          cd ./target/${{ matrix.target }}/release/
          tar czfv lovely-${{ matrix.target }}.tar.gz liblovely.so run_lovely_linux.sh
          mv "lovely-${{ matrix.target }}.tar.gz" ${{ github.workspace }}

      - name: Submit build artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload ${{ github.ref_name }} lovely-${{ matrix.target }}.tar.gz

  build-android:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - armv7-linux-androideabi    # ARMv7 Android
          - aarch64-linux-android      # ARMv8 Android

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c

      - name: Configure Android cross-compilation
        run: |
          mkdir -p ~/.cargo
          cat >> ~/.cargo/config.toml << EOF
          [target.armv7-linux-androideabi]
          ar = "${{ env.ANDROID_NDK_ROOT }}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
          linker = "${{ env.ANDROID_NDK_ROOT }}/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang"
          
          [target.aarch64-linux-android]
          ar = "${{ env.ANDROID_NDK_ROOT }}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
          linker = "${{ env.ANDROID_NDK_ROOT }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
          EOF

      - name: Build
        run: cargo build --target ${{ matrix.target }} --package lovely-unix --release

      - name: Compress tar.gz
        run: |
          cp ./crates/lovely-unix/run_lovely_linux.sh ./target/${{ matrix.target }}/release/
          cd ./target/${{ matrix.target }}/release/
          tar czfv lovely-${{ matrix.target }}.tar.gz liblovely.so run_lovely_linux.sh
          mv "lovely-${{ matrix.target }}.tar.gz" ${{ github.workspace }}

      - name: Submit build artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload ${{ github.ref_name }} lovely-${{ matrix.target }}.tar.gz
